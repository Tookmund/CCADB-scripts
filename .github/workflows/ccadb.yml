name: "Build CCADB SQLite 3 Database and CSV"

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: '35 3 * * */7'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Generate CCADB Table
        run: $GITHUB_WORKSPACE/ccadb.sh

      - uses: actions/upload-artifact@v4
        with:
          name: CCADB.db
          path: CCADB.db

      - uses: actions/upload-artifact@v4
        with:
          name: CCADB.csv
          path: CCADB.csv
  commit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: CCADB.csv

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SSH_KEY }}
          repository: tookmund/CCADB-csv
          path: ccadb-csv
          fetch-depth: 0

      - run: |
          cd ccadb-csv
          git config user.name github-actions
          git config user.email github-actions@github.com
          mv ../CCADB.csv .
          git add CCADB.csv
          # Quit early if there are no changes
          git diff --exit-code && exit 0
          git commit -m "Automated CSV Update"
          git push

  # Based on https://github.com/simonw/til
  vercel:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Scripts
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: actions/cache@v3
        name: Configure pip caching
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - uses: actions/setup-node@v4
        name: Install Node.js

      - name: Install Vercel
        run: |
          npm i -g vercel

      - name: Download CCADB.db
        uses: actions/download-artifact@v4
        with:
          name: CCADB.db

      - name: Deploy Datasette using Vercel
        env:
          NOW_TOKEN: ${{ secrets.VERCEL }}
        run: |-
          datasette publish vercel CCADB.db \
            --token $NOW_TOKEN \
            --branch main \
            --project ccadb \
            --metadata metadata.yaml \
            --install datasette-template-sql \
            --install "datasette-atom>=0.7" \
            --install datasette-json-html \
            --install beautifulsoup4 \
            --install datasette-debug-asgi \
            --install "datasette-graphql>=0.12" \
            --install datasette-media \
            --public

  commit-scripts:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: CCADB.csv

      - uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.SCRIPTS_SSH_KEY }}
          repository: tookmund/CCADB-scripts
          path: ccadb-scripts
          fetch-depth: 0

      - run: |
          cd ccadb-scripts
          git switch changelog
          git config user.name github-actions
          git config user.email github-actions@github.com
          date -Iseconds >> CHANGELOG
          sha256sum ../CCADB.csv >> CHANGELOG
          printf "\n\n" >> CHANGELOG
          git add CHANGELOG
          git commit -m "Automated CSV Update Checksum"
          git push
